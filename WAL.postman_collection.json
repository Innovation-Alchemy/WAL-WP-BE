{
	"info": {
		"_postman_id": "e2fdeffa-839a-414b-91a9-c063c837f359",
		"name": "WAL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18206263"
	},
	"item": [
		{
			"name": "Auth Management",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\":\"Fadel hmd7\",\r\n  \"email\": \"fadel.ahammoud@gmail.com\",\r\n  \"password\":\"inno@fadel777\",\r\n  \"gender\":\"male\",\r\n  \"birthdate\": \"1996-01-20\",\r\n  \"role\": \"User\",\r\n  \"phone_number\":\"716969256\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Request to be organizer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\":1,\r\n  \"message\": \"im want to be an organizer\"\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/request-organizer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"request-organizer"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Verify-email{token}",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/verify-email/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJmYWRlbC5haGFtbW91ZEBnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTczNDYzMTY1MCwiZXhwIjoxNzM1MjM2NDUwfQ.ZwSYTA_McG69ec0JjrGi5xyYN9qOkEmtuXw6yYNpNCs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"verify-email",
								"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJmYWRlbC5haGFtbW91ZEBnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTczNDYzMTY1MCwiZXhwIjoxNzM1MjM2NDUwfQ.ZwSYTA_McG69ec0JjrGi5xyYN9qOkEmtuXw6yYNpNCs"
							]
						},
						"description": "This endpoint verifies a user's email address."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"fadel.ahammoud@gmail.com\",\r\n  \"password\": \"inno@fadel777\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "This endpoint allows users to log into the application by providing their email and password."
					},
					"response": []
				},
				{
					"name": "channge password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1,\r\n  \"oldPassword\": \"inno\",\r\n  \"newPassword\": \"inno@fadel777\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/change-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"change-password"
							]
						},
						"description": "This endpoint allows users to log into the application by providing their email and password."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTg4NzksImV4cCI6MTczNTMwMzY3OX0.s-GpzQaFTd4NdUd3GR35U5oZXOeq0e5eqfwO-YX8kIs\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "This endpoint logs the user out of the application."
					},
					"response": []
				},
				{
					"name": "Approve",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/approve/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"approve",
								"2"
							]
						},
						"description": "This endpoint allows users to log into the application by providing their email and password."
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users That Needs Approval",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/approval-needed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"approval-needed"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\":\"Abbas\",\r\n  \"email\": \"irada@innoalchemy.business\",\r\n  \"gender\": \"male\",\r\n  \"birthdate\": \"1997-01-11\",\r\n  \"role\": \"User\",\r\n  \"phone_number\":\"7108090689\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "create an operator",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"email\": \"irada@innoalchemy.business\",\r\n  \"phone_number\": \"1234567890\",\r\n  \"gender\": \"Male\",\r\n  \"birthdate\": \"1990-01-01\"\r\n  \r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/users/operator",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"operator"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "gender",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "birthdate",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "role",
									"value": "Organizer",
									"type": "text"
								},
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/hk.jpg",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/users/18",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"21"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile Details",
			"item": [
				{
					"name": "Get All Profile Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/profiles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Details by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/profiles/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile Details by user id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/profiles/for-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles",
								"for-user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create Profile Detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Raul",
									"type": "text"
								},
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/cr7.jpg"
								},
								{
									"key": "cover_photo",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/f0.jpg"
								},
								{
									"key": "description",
									"value": "trying profile ",
									"type": "text"
								},
								{
									"key": "website",
									"value": "www.profile@google.com",
									"type": "text"
								},
								{
									"key": "facebook",
									"value": "www.profile@google.com",
									"type": "text"
								},
								{
									"key": "twitter",
									"value": "www.profile@google.com",
									"type": "text"
								},
								{
									"key": "instagram",
									"value": "www.profile@google.com",
									"type": "text"
								},
								{
									"key": "linkedin",
									"value": "www.profile@google.com",
									"type": "text"
								},
								{
									"key": "address",
									"value": "lebanon",
									"type": "text"
								},
								{
									"key": "city",
									"value": "beirut",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/profiles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "update Profile Detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "Raul",
									"type": "text",
									"disabled": true
								},
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/cr7.jpg",
									"disabled": true
								},
								{
									"key": "cover_photo",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/f0.jpg",
									"disabled": true
								},
								{
									"key": "description",
									"value": "trying profile ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "website",
									"value": "www.profile@google.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "facebook",
									"value": "www.profile@google.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "twitter",
									"value": "www.profile@google.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "instagram",
									"value": "www.profile@google.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "linkedin",
									"value": "www.profile@google.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "address",
									"value": "lebanon",
									"type": "text",
									"disabled": true
								},
								{
									"key": "city",
									"value": "tyr",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/profiles/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles",
								"2"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Delete Profile Detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/profiles/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"profiles",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Password Reset Token Management",
			"item": [
				{
					"name": "Forget Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"fadel.ahammoud@gmail.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/forget-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"forget-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"token\": \"ef09a9c8d393cb94f227a7a5db7572cf22abdf0bc6def04077cc0e2ccba98a50\",\r\n  \"password\": \"Fadel@777\",\r\n  \"confirmPassword\": \"Fadel@777\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/reset-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Permission Management",
			"item": [
				{
					"name": "Get All Permission data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/permissions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get All Permission data by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/permissions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create A Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"auth-approve\",\n  \"roles\": [\"Admin\"]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/permissions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Assign Permission to Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permissionIds\": [45]\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/permissions/assign/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions",
								"assign",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Remove a Permission from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permissionIds\":[43]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/permissions/remove/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions",
								"remove",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update A Permission By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"create-blogs\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/permissions/43",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions",
								"43"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete A Permission By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJmYWRlbC5haGFtbW91ZEBnbWFpbC5jb20iLCJpYXQiOjE3MzI3OTIxMzMsImV4cCI6MTczMzA1MTMzM30.0Y24AWoUPxHF1hXtBPRQ4djEP8-QBxxkMU3_SKZqtyE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/permissions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"permissions",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Hobbies management",
			"item": [
				{
					"name": "Get All Hobbies data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/hobbies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get All Hobby data by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/hobbies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get All Hobbies by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/hobbies/for-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"for-user",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create A Hobby",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"basketball\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/hobbies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Assign Hobby to Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hobbyIds\": [2]\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/hobbies/assign/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"assign",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Remove a Hobby from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hobbyIds\":[1,2]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/hobbies/remove/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"remove",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update A Hobby By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sport\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/hobbies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"1"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete A Hobby By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJmYWRlbC5haGFtbW91ZEBnbWFpbC5jb20iLCJpYXQiOjE3MzI3OTIxMzMsImV4cCI6MTczMzA1MTMzM30.0Y24AWoUPxHF1hXtBPRQ4djEP8-QBxxkMU3_SKZqtyE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/hobbies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hobbies",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Category Management",
			"item": [
				{
					"name": "Gell All Categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"categories"
							]
						},
						"description": "This endpoint allows selecting all types like blog, product, and event to facilitate adding a category."
					},
					"response": []
				},
				{
					"name": "Get Category By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/categories/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"categories",
								"1"
							]
						},
						"description": "This endpoint allows the selection of a category by its id."
					},
					"response": []
				},
				{
					"name": "create category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Teck event\",\r\n    \"type\":\"event\",\r\n    \"description\":\"super duber bober\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"categories"
							]
						},
						"description": "This endpoint allows adding a new category."
					},
					"response": []
				},
				{
					"name": "assign categories to event or products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"categoryIds\": [1, 2, 3]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/assign-categories/event/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assign-categories",
								"event",
								"1"
							]
						},
						"description": "This endpoint allows adding a new category."
					},
					"response": []
				},
				{
					"name": "remove categories to event or products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"categoryIds\": [1, 2, 3]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"categories"
							]
						},
						"description": "This endpoint allows adding a new category."
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Teck event\",\r\n    \"type\":\"event\",\r\n    \"descritpion\":\"s\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/categories/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"categories",
								"{id}"
							]
						},
						"description": "This endpoint allows updating a category."
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/category/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"category",
								"{id}"
							]
						},
						"description": "This endpoint allows deleting a category."
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification Management",
			"item": [
				{
					"name": "Gell All Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/notifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"notifications"
							]
						},
						"description": "This endpoint allows selecting all types like blog, product, and event to facilitate adding a category."
					},
					"response": []
				},
				{
					"name": "Get Notification By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/notifications/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"notifications",
								"3"
							]
						},
						"description": "This endpoint allows the selection of a category by its id."
					},
					"response": []
				},
				{
					"name": "Get Notification By User Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/notifications/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"notifications",
								"user",
								"1"
							]
						},
						"description": "This endpoint allows the selection of a category by its id."
					},
					"response": []
				},
				{
					"name": "create Notification",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1,\r\n  //\"event_id\": 2,\r\n // \"blog_id\": null,\r\n  \"product_id\": 1,\r\n  //\"notification_type\": \"organizer-approval\",\r\n  \"alerts\": \"low-stock\",\r\n  \"message\": \"Low stock for Product A.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/notifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"notifications"
							]
						},
						"description": "This endpoint allows adding a new category."
					},
					"response": []
				},
				{
					"name": "mark as read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/notifications/read/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"notifications",
								"read",
								"1"
							]
						},
						"description": "This endpoint allows updating a category."
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/notifications/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"notifications",
								"{id}"
							]
						},
						"description": "This endpoint allows deleting a category."
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Management",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/events/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event by Organizer id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/events/for-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events",
								"for-user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "organizer_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "title",
									"value": "taylor swift",
									"type": "text"
								},
								{
									"key": "description",
									"value": "a taylor event with the best rapper alive",
									"type": "text"
								},
								{
									"key": "date_time",
									"value": "[\"2025-07-10T18:00:00\",\"2025-07-11T18:00:00\",\"2025-07-12T18:00:00\"]\n",
									"type": "text"
								},
								{
									"key": "location[lat]",
									"value": "30.712776",
									"type": "text"
								},
								{
									"key": "location[lng]",
									"value": "-74.005974",
									"type": "text"
								},
								{
									"key": "location[address]",
									"value": "lebanon-beirut",
									"type": "text"
								},
								{
									"key": "seated",
									"value": "false",
									"type": "text"
								},
								{
									"key": "ticket_maps",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/cr7.jpg",
									"disabled": true
								},
								{
									"key": "commission",
									"value": "4",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Update Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Annual Conference",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "A premier conference",
									"type": "text",
									"disabled": true
								},
								{
									"key": "date_time[0]",
									"value": "2024-05-01T15:00:00Z",
									"type": "text",
									"disabled": true
								},
								{
									"key": "date_time[1]",
									"value": "2024-05-02T27:00:00Z",
									"type": "text",
									"disabled": true
								},
								{
									"key": "location[lat]",
									"value": "40.712776",
									"type": "text",
									"disabled": true
								},
								{
									"key": "location[lng]",
									"value": "-74.005974",
									"type": "text",
									"disabled": true
								},
								{
									"key": "seated",
									"value": "false",
									"type": "text",
									"disabled": true
								},
								{
									"key": "ticket_maps",
									"value": "https://www.anaconda.com/",
									"type": "text"
								},
								{
									"key": "organizer_id",
									"value": "18",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events",
								"2"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Delete event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/events/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"events",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tickets Management",
			"item": [
				{
					"name": "Get All Tickets",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tickets By Ticket Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ticket by Event id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets/event/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets",
								"event",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " // tickets for seated events\r\n/*{\r\n  \"event_id\": 2,\r\n  \"amount_issued\": 300,\r\n   \"ticket_alert\":10,\r\n// seated event ticckets have no waves\r\n  \"price\": [\r\n    { \"color\": \"blue\", \"price\": 110 },\r\n    { \"color\": \"red\", \"price\": 70 }\r\n  ],\r\n  \"section\": [\r\n    { \"color\": \"blue\", \"section\": [\"A\", \"B\"] },\r\n    { \"color\": \"red\", \"section\": [\"B\"] }\r\n  ],\r\n  \"total_seats\": [\r\n    { \"section\": \"A\", \"seats\": 100  },\r\n    { \"section\": \"B\", \"seats\": 120 },\r\n    { \"section\": \"B\", \"seats\": 80 }\r\n  ]\r\n}*/\r\n//tikcets for non seated events\r\n{\r\n  \"event_id\": 3,\r\n  \"price\": [\r\n    { \"color\": \"blue\", \"price\": 50 },\r\n    { \"color\": \"red\", \"price\": 70 }\r\n  ],\r\n  \"section\": [\r\n    {\r\n      \"color\": \"blue\",\r\n      \"section\": [\"Zone-A\"],  // optional grouping\r\n      \"quantity\":100\r\n    },\r\n    {\r\n      \"color\": \"red\",\r\n      \"section\": [\"Zone-B\", \"Zone-C\"],\r\n      \"quantity\":100\r\n    }\r\n  ],\r\n  \"total_seats\": [],    // or omit entirely\r\n  \"amount_issued\": 200,\r\n  \"waves\": \"Wave one\",\r\n  \"issued_at\": \"2025-01-08T09:00:00\",\r\n  \"ticket_alert\":10\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Update Ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " // tickets for seated events\r\n{\r\n  \"event_id\": 2,\r\n  \"amount_issued\": 20,\r\n   \"ticket_alert\":10,\r\n// seated event ticckets have no waves\r\n  \"price\": [\r\n    { \"color\": \"blue\", \"price\": 110 },\r\n    { \"color\": \"red\", \"price\": 70 }\r\n  ],\r\n  \"section\": [\r\n    { \"color\": \"blue\", \"section\": [\"A\", \"B\"] },\r\n    { \"color\": \"red\", \"section\": [\"B\"] }\r\n  ],\r\n  \"total_seats\": [\r\n    { \"section\": \"A\", \"seats\": 5  },\r\n    { \"section\": \"B\", \"seats\": 12 },\r\n    { \"section\": \"B\", \"seats\": 3 }\r\n  ]\r\n}\r\n//tikcets for non seated events\r\n/*{\r\n  \"event_id\": 1,\r\n   \"ticket_alert\":10,\r\n  \"price\": [\r\n    { \"color\": \"blue\", \"price\": 50 },\r\n    { \"color\": \"red\", \"price\": 70 }\r\n  ],\r\n  \"section\": [\r\n    {\r\n      \"color\": \"blue\",\r\n      \"section\": [\"Zone-A\"]  // optional grouping\r\n    },\r\n    {\r\n      \"color\": \"red\",\r\n      \"section\": [\"Zone-B\", \"Zone-C\"]\r\n    }\r\n  ],\r\n  \"total_seats\": [],    // or omit entirely\r\n  \"amount_issued\": 400,\r\n  \"waves\": \"Wave 2\",\r\n  \"issued_at\": \"2025-01-08T09:00:00\"\r\n}\r\n*/\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets",
								"4"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Delete ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tickets Sold Management",
			"item": [
				{
					"name": "Get All Tickets Sold",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ticket sold by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ticket sold by Buyer id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/for-buyer/18",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"for-buyer",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reserve a ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n// reserving tickets for seated events:\r\n/*{\r\n  \"ticket_id\": 4,\r\n  \"buyer_id\": 1,\r\n  \"reservations\": [\r\n    { \"section\": \"A\", \"seat\": 1, \"color\": \"blue\" }\r\n   \r\n  ]\r\n}*/\r\n\r\n// reserveing tickets for non seated events:\r\n{\r\n  \"ticket_id\": 5,\r\n  \"buyer_id\": 1,\r\n  \"reservations\": [\r\n    {\r\n      \"section\": \"Zone-A\",\r\n      \"color\": \"blue\",\r\n      \"quantity\": 98\r\n    }\r\n  ]\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/reserve",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"reserve"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Confirm Selling a ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ticket_sold_ids\": [26],\r\n  \"buyer_id\": 1\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/confirm-purchasing-tickets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"confirm-purchasing-tickets"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "scan qr_code check in",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"qr_code_token\":\"5c41839126a84648cf944697a5fe5cdc\"\r\n \r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/check-in",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"check-in"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				},
				{
					"name": "Cancel a ticket reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ticket_sold_id\": 1\r\n\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/tickets-sold/cancel-reservation/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tickets-sold",
								"cancel-reservation",
								"3"
							]
						},
						"description": "This endpoint allows new users to create an account by providing their details. Upon successful registration, the user will receive an email verification link to activate their account before logging in."
					},
					"response": []
				}
			]
		},
		{
			"name": "Coupon Management",
			"item": [
				{
					"name": "Get All Coupons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/coupons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons"
							]
						},
						"description": "This endpoint allows the selection of all coupons"
					},
					"response": []
				},
				{
					"name": "Get A Coupon by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/coupons/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons",
								"1"
							]
						},
						"description": "This endpoint allows the selection of all coupons"
					},
					"response": []
				},
				{
					"name": "Create Coupon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1,\r\n // \"event_id\":1,\r\n  //\"product_id\":1,\r\n  \"coupon_key\": \"SAVE30\",\r\n  //\"discount_percentage\": 20,\r\n  \"min_price\":600,\r\n  \"discount_in_dollar\":30,\r\n  \"allowed_uses_per_user\":2,\r\n  \"max_uses\": 3,\r\n  \"valid_from\": \"2024-12-01T00:00:00.000Z\",\r\n  \"valid_to\": \"2024-12-31T23:59:59.999Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/coupons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Coupon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"coupon_key\": \"SAVE30\",\r\n  \"total_price\": 630,\r\n  \"user_id\": 16\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/coupons/apply",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons",
								"apply"
							]
						},
						"description": "This endpoint allows checking the validity of a coupon"
					},
					"response": []
				},
				{
					"name": "Update Coupon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  //\"user_id\": 1,\r\n // \"event_id\":1,\r\n  //\"product_id\":1,\r\n // \"coupon_key\": \"SAVE20\",\r\n  //\"discount_percentage\": 20,\r\n  //\"min_price\":600,\r\n  //\"discount_in_dollar\": 5,\r\n // \"allowed_uses_per_user\":2,\r\n  \"max_uses\": 4\r\n  //\"valid_from\": \"2024-12-01T00:00:00.000Z\",\r\n  //\"valid_to\": \"2024-12-31T23:59:59.999Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/coupons/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons",
								"2"
							]
						},
						"description": "This endpoint allows the updating of a coupon."
					},
					"response": []
				},
				{
					"name": "Delete Coupon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/coupons/delete/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"coupons",
								"delete",
								"2"
							]
						},
						"description": "This endpoint allows deleting a coupon by id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog-Management",
			"item": [
				{
					"name": "Get All Blogs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "get Blog by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"1"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "get Blog by user Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs/for-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"for-user",
								"1"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "Create Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "event_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "lets try this",
									"type": "text"
								},
								{
									"key": "files",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/fifa.jpg",
									"disabled": true
								},
								{
									"key": "description",
									"value": "without tags or files",
									"type": "text"
								},
								{
									"key": "content",
									"value": "popolololololololo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Update Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IlVzZXIiLCJpYXQiOjE3MzQ2OTkxODUsImV4cCI6MTczNTMwMzk4NX0.Z7_lqhRGdK6fwCX5dlYKLMLLjjUfxGUZL2HfZRApr74",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "event_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "who knows",
									"type": "text",
									"disabled": true
								},
								{
									"key": "files",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/favicon.ico.jpg"
								},
								{
									"key": "tags",
									"value": "[\"loli\", \"pop\"]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "its just a trial relax",
									"type": "text",
									"disabled": true
								},
								{
									"key": "content",
									"value": "yala again",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"2"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Delete Blog",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"1"
							]
						},
						"description": "This endpoint allows deleting one blog by its id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Product-Management",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "get product by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "Create a product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "event_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "blog_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "short-v2",
									"type": "text"
								},
								{
									"key": "description",
									"value": "short  is the most amamzing on the planet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "40",
									"type": "text"
								},
								{
									"key": "size",
									"value": "[\"S\", \"M\", \"L\", \"XL\"]",
									"type": "text"
								},
								{
									"key": "color",
									"value": "[\"red\",\"blue\"]",
									"type": "text"
								},
								{
									"key": "commission",
									"value": "50.0",
									"type": "text"
								},
								{
									"key": "stock_alert",
									"value": "5",
									"type": "text"
								},
								{
									"key": "quantities",
									"value": "[{\"color\":\"red\",\"size\":\"L\",\"quantity\":10},{\"color\":\"blue\",\"size\":\"XL\",\"quantity\":10}]",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/USER/Desktop/red-shorts.jpeg"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/USER/Desktop/blue-shorts.jpeg"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Update product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "event_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "blog_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "T-shirt",
									"type": "text"
								},
								{
									"key": "description",
									"value": "T-shirt  is the most amamzing on the planet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "20",
									"type": "text"
								},
								{
									"key": "size",
									"value": "[\"S\", \"M\", \"L\"]",
									"type": "text"
								},
								{
									"key": "color",
									"value": "[\"brown\",\"blue\"]",
									"type": "text"
								},
								{
									"key": "commission",
									"value": "15.0",
									"type": "text"
								},
								{
									"key": "stock_alert",
									"value": "5",
									"type": "text"
								},
								{
									"key": "quantities",
									"value": "[{\"color\":\"brown\",\"size\":\"S\",\"quantity\":10},{\"color\":\"blue\",\"size\":\"M\",\"quantity\":15}]",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/USER/Desktop/we-are-lebanon(WAL)/t-shirt-v1-brown.jpeg"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/USER/Desktop/tshirt_blue_back.jpg"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Delete product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"1"
							]
						},
						"description": "This endpoint allows deleting one blog by its id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Stock Management",
			"item": [
				{
					"name": "Get All Stock",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/stock",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"stock"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart Management",
			"item": [
				{
					"name": "Get  Cart by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/cart/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"cart",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add to cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1,\r\n  \"product_id\": 1,\r\n  \"quantity\": 3,\r\n  \"color\": \"blue\",\r\n  \"size\": \"M\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/cart/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"cart",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check-out",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/cart/checkout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"cart",
								"checkout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product in cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"cart_id\": 2,\r\n   \"product_id\": 1,\r\n   \"color\": \"blue\",\r\n   \"size\": \"M\",\r\n   \"newQuantity\": 4\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/cart/update-quantity",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"cart",
								"update-quantity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove From Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cart_id\": 2,\r\n  \"product_id\": 1,\r\n  \"color\": \"blue\",\r\n  \"size\": \"M\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/cart/remove",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"cart",
								"remove"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product-Purchase-Management",
			"item": [
				{
					"name": "Get All Purchases",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/product-purchases",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "Get A Purchase By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/product-purchases/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases",
								"2"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "Get A Purchase By user Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/product-purchases/for-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases",
								"for-user",
								"1"
							]
						},
						"description": "This endpoint allows selection one blog by passing the id as a parameter."
					},
					"response": []
				},
				{
					"name": "Create a purchase",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product_id\": 3,\r\n  \"user_id\": 18,\r\n  \"size\": \"XL\",\r\n  \"color\": \"Brown\",\r\n  \"quantity\": 1\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/product-purchases",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Update Purchase",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  //\"product_id\": 1,\r\n  //\"user_id\": 1,\r\n  //\"size\": \"M\",\r\n  //\"color\": \"Red\",\r\n  \"quantity\": 4\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/product-purchases/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases",
								"2"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Complete purchase",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/product-purchases/complete/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-purchases",
								"complete",
								"4"
							]
						},
						"description": "This endpoint allows the creation of a new blog."
					},
					"response": []
				},
				{
					"name": "Delete purchase",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs",
								"1"
							]
						},
						"description": "This endpoint allows deleting one blog by its id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Likes Management",
			"item": [
				{
					"name": "create a like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 18,\r\n  \"blog_id\": 2\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/likes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes"
							]
						},
						"description": "Add a new page"
					},
					"response": []
				},
				{
					"name": "get like by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/likes/by-user/16",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes",
								"by-user",
								"16"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get like count by blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/likes/likes-count/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes",
								"likes-count",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "Get All Likes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/likes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get like by blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/likes/by-blog/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes",
								"by-blog",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "delete like by blog id and user id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 16,\r\n  \"blog_id\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/likes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"likes"
							]
						},
						"description": "Delete a specific page by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "comments Management",
			"item": [
				{
					"name": "create a comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 16,\r\n  \"blog_id\": 2,\r\n  \"content\":\"hey im raul\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments"
							]
						},
						"description": "Add a new page"
					},
					"response": []
				},
				{
					"name": "update comment by id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 16,\r\n  \"content\":\"hey im raul gonl\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"2"
							]
						},
						"description": "Delete a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get comment by user id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/comments/by-user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"by-user",
								"1"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get comment count for blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/comments/comment-count/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"comment-count",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get comment by  id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"1"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "Get All Comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get comment by blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/comments/by-blog/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"by-blog",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "delete comment by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 2,\r\n  \"blog_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"comments",
								"1"
							]
						},
						"description": "Delete a specific page by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Views Management",
			"item": [
				{
					"name": "create a view",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 16,\r\n  \"blog_id\": 2\r\n  \r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/views",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views"
							]
						},
						"description": "Add a new page"
					},
					"response": []
				},
				{
					"name": "get view by user id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/views/by-user/16",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views",
								"by-user",
								"16"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "Get view count by blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/views/views-count/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views",
								"views-count",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get view by  id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/views/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views",
								"1"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "Get All view",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/views",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "get view by blog id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/views/by-blog/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views",
								"by-blog",
								"2"
							]
						},
						"description": "Retrieve details of a specific page by ID"
					},
					"response": []
				},
				{
					"name": "delete view by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 2,\r\n  \"blog_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/views/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"views",
								"1"
							]
						},
						"description": "Delete a specific page by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Combined Api's For Pages",
			"item": [
				{
					"name": "Get Admin Panel Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1OTEwMTQyLCJleHAiOjE3MzY1MTQ5NDJ9.e5v2bQxUrjJCdrLRlRrog-AhqRK-I_pfWDFhid1gsRI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/combined-data/admin-panel-data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"combined-data",
								"admin-panel-data"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog Reports Management",
			"item": [
				{
					"name": "Get All Blog Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Blog Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"blog_id\": 1,\r\n  \"report_id\": 1,\r\n  \"description\":\"a bad info\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Blog Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs-reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-reports",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog Tags Management",
			"item": [
				{
					"name": "Get All Blog Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/blogs-tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Blog Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"blog_id\": 1,\r\n  \"tag_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs-tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Blog Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/blogs-tags/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blogs-tags",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Reports Management",
			"item": [
				{
					"name": "Get All Event Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/event-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Event Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"event_id\": 1,\r\n  \"report_id\": 1,\r\n  \"description\":\"a bad info\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/event-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Event Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/event-reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-reports",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Tags Management",
			"item": [
				{
					"name": "Get All Event Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/event-tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Event Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"event_id\": 1,\r\n  \"tag_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/event-tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Event Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/event-tags/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"event-tags",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Reports Management",
			"item": [
				{
					"name": "Get All Product Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/product-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Product Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product_id\": 1,\r\n  \"report_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/product-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/product-reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Tags Management",
			"item": [
				{
					"name": "Get All Product Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/product-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create A Product Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product_id\": 1,\r\n  \"report_id\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/product-reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/product-reports/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"product-reports",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports Management",
			"item": [
				{
					"name": "Get All  Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/report",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get A Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/report",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"title\":\"not correct information\",\r\n  \"description\":\"a bad info\",\r\n  \"report_type\":\"false-information\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/report",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/report/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"report",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tags Management",
			"item": [
				{
					"name": "Get All  Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get A Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/tags/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"name\":\"Travel\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rating Management",
			"item": [
				{
					"name": "Get All  Ratings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/ratings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get A Rating",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/ratings/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ratings",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rating",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"user_id\":1,\r\n  \"product_id\":1,\r\n  \"rating\":2,\r\n  \"comment\":\"so so\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/ratings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rating",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM2MjQ2ODMyLCJleHAiOjE3MzY4NTE2MzJ9.RUbP5PDyo8Dv-G0_sNBzqqqL_f31pJkSRWT3uvujTok",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/ratings/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ratings",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "News Management",
			"item": [
				{
					"name": "Get All News Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get News by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/news/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Serach by News Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/news/search?title=first",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news",
								"search"
							],
							"query": [
								{
									"key": "title",
									"value": "first"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Filter By News catrgory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/news/filter/category?category=warzone",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news",
								"filter",
								"category"
							],
							"query": [
								{
									"key": "category",
									"value": "warzone"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create News",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "admin_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "title",
									"value": "third News InCmoing",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/USER/Pictures/f0.jpg"
								},
								{
									"key": "content",
									"value": "here we go again this time it should work",
									"type": "text"
								},
								{
									"key": "category",
									"value": "press",
									"type": "text"
								},
								{
									"key": "published_at",
									"value": "2024-11-25",
									"type": "text"
								},
								{
									"key": "language",
									"value": "en",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/news",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update News By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "admin_id",
									"value": "3",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "First News InCmoing",
									"type": "text",
									"disabled": true
								},
								{
									"key": "images",
									"type": "file",
									"src": [
										"/C:/Users/USER/Pictures/f0.jpg",
										"/C:/Users/USER/Pictures/f02.jpg"
									]
								},
								{
									"key": "content",
									"value": "Lebanon is under war ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "category",
									"value": "warzone",
									"type": "text",
									"disabled": true
								},
								{
									"key": "published_at",
									"value": "2024-11-27",
									"type": "text",
									"disabled": true
								},
								{
									"key": "language",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/news/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete News By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/news/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"news",
								"4"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Advertisements Management",
			"item": [
				{
					"name": "Get All Ads Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/ads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ads"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Ads by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/ads/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ads",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create News",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "admin_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "title",
									"value": "ads on the way",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": [
										"/C:/Users/USER/Pictures/logo.png",
										"/C:/Users/USER/Pictures/f3.jpg"
									]
								},
								{
									"key": "description",
									"value": "ads are for people with most creative minds",
									"type": "text"
								},
								{
									"key": "target_audience",
									"value": "fun people",
									"type": "text"
								},
								{
									"key": "start_date",
									"value": "2024-11-25",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2024-12-31",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/ads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ads"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update News",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM1MzA0MTIzLCJleHAiOjE3MzU5MDg5MjN9.2tb_ESvj0oPT3XRTsfNt7CQrAr0SROo3aQ799E2jICY",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "admin_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "ads on the way",
									"type": "text",
									"disabled": true
								},
								{
									"key": "images",
									"type": "file",
									"src": [
										"/C:/Users/USER/Pictures/logo.png",
										"/C:/Users/USER/Pictures/f3.jpg"
									],
									"disabled": true
								},
								{
									"key": "description",
									"value": "ads are for people with most creative minds",
									"type": "text",
									"disabled": true
								},
								{
									"key": "target_audience",
									"value": "funny people",
									"type": "text"
								},
								{
									"key": "start_date",
									"value": "2024-11-25",
									"type": "text",
									"disabled": true
								},
								{
									"key": "end_date",
									"value": "2024-12-31",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/ads/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ads",
								"1"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete News By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/ads/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"ads",
								"4"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		}
	]
}